pipeline:
  godot-build-linux:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export "Linux/X11" godot-build/Find\ Billy\ for\ Linux\ ${CI_COMMIT_TAG}.x86_64
      - ls godot-build
    when:
      event: tag
  godot-build-windows:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export "Windows Desktop" godot-build/Find\ Billy\ for\ Windows\ ${CI_COMMIT_TAG}.exe
      - ls godot-build
    when:
      event: tag
  godot-build-mac:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export "Mac OSX" godot-build/Find\ Billy\ for\ Mac\ OSX\ ${CI_COMMIT_TAG}.zip
      - ls godot-build
    when:
      event: tag
  godot-build-web:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}
      - godot -v --export "HTML5" godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}/index.html
      - zip godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}.zip godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}/*
      - rm -rf godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}
      - ls godot-build
    when:
      event: tag
  godot-build-linux-pack:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export-pack "Linux/X11" godot-build/godot-runner.pck
      - ls godot-build
    when:
      event: tag
  changelog:
    image: quay.io/git-chglog/git-chglog:latest
    secrets: [ token ]
    commands:
      # clone repository
      - git clone https://"$${TOKEN}"@codeberg.org/${CI_REPO_OWNER}/${CI_REPO_NAME}.git /${CI_REPO_NAME}
      - cd /${CI_REPO_NAME}
      # generate changelog
      - git-chglog > CHANGELOG.md
      # configure git
      - git config --global user.email "mail@ci.codeberg.org"
      - git config --global user.name "Codeberg CI"
      # deploy changelog
      - git add CHANGELOG.md
      - >
        git commit -m 'docs(changelog): update' ; git push
    when:
      event: tag
  appdata-releases-update:
    image: alpine
    secrets: [ token ]
    commands:
      # install dependencies
      - apk add git xmlstarlet
      # clone repository
      - git clone https://"$${TOKEN}"@codeberg.org/${CI_REPO_OWNER}/${CI_REPO_NAME}.git /${CI_REPO_NAME}
      - cd /${CI_REPO_NAME}
      # update appdata <releases>
      - head -1 page.codeberg.papojari.Find_Billy.appdata.xml > page.codeberg.papojari.Find_Billy.appdata.xml.tmp
      - |
        xmlstarlet edit --omit-decl
        -s '//releases' -t elem -n "release"
        -s '//releases/release[last()]' -t elem -n "url" -v "https://codeberg.org/papojari/Find-Billy/releases/tag/${CI_COMMIT_TAG}"
        -s '//releases/release[last()]' -t attr -n "version" -v "${CI_COMMIT_TAG}"
        -s '//releases/release[last()]' -t attr -n "date" -v "$(date -u +'%Y-%m-%d')"
        page.codeberg.papojari.Find_Billy.appdata.xml >> page.codeberg.papojari.Find_Billy.appdata.xml.tmp
      - mv page.codeberg.papojari.Find_Billy.appdata.xml.tmp page.codeberg.papojari.Find_Billy.appdata.xml
      # configure git
      - git config --global user.email "mail@ci.codeberg.org"
      - git config --global user.name "Codeberg CI"
      # deploy
      - git add page.codeberg.papojari.Find_Billy.appdata.xml
      - >
        git commit -m 'docs(changelog): update' ; git push
    when:
      event: tag
  gitea-release:
    image: plugins/gitea-release
    secrets: [ gitea_token token ]
    settings:
      api_key:
        from_secret: gitea_token
      base_url: https://codeberg.org
      files:
        - godot-build/*
      checksum:
        - sha256
        - sha512
      title: ${CI_COMMIT_TAG}
      note: ${CI_REPO_LINK}/src/branch/main/CHANGELOG.md#${CI_COMMIT_TAG/\./-}
    when:
      event: tag
      path:
        exclude: [ '*.md', '.chglog/**' ]
  deploy-web:
    image: alpine
    secrets: [ token ]
    commands:
      - apk add git unzip rsync
      # clone pages repository
      - git clone https://"$${TOKEN}"@codeberg.org/${CI_REPO_OWNER}/pages.git /pages
      # unzip web version
      - unzip godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}.zip -d godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}/
      - cd godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}/godot-build/Find\ Billy\ for\ Web\ ${CI_COMMIT_TAG}/
      - mv index.html game.html
      - rsync -r --delete --exclude-from="../../../../.rsyncignore" * /pages/find-billy/
      # configure git
      - git config --global user.email "mail@ci.codeberg.org"
      - git config --global user.name "Codeberg CI"
      # deploy web version
      - cd /pages
      - git add -A
      - >
        git commit -m 'chore: update Find Billy! to ${CI_COMMIT_TAG}' ; git push
    when:
      event: tag
